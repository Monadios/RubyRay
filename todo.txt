http://vasir.net/blog/game-development/how-to-build-entity-component-system-in-javascript

Maybe components could just be json object
Entity reload components by rereading files

Make Component Data only -- add systems (ECS)
Make Camera a system
ConfigFileParser type conversion
 Istream << operator
 maybe change to CSV parser
Add Event System -> more immutability
Wall Class
Make player a gameobject
Add Location,Direction, Plane Components
Remove raw pointers
Public -> private
Split level into areas and only update those
Immutability
AI
Weapon
Door + Secret Area (gst)
 Check in immediate vicinity (ie posX +- 1, posY +- 1)
Data Driven Design
 Make Enemies load from lua file
 Make Components easier to load from file
Animation
Cutscenes = Move Camera Independently
 scripted events files
Improve Directory Structure
currentDist lookuptable
Menu screen (stack loaded from file)
possibly add camera movement after inaction
(cam->plX = cam->plX * cos(-p->rotSpeed);// - cam->plY * sin(-p->rotSpeed) )
Enemy types
Debug Console
Add fps capping and lower resolution (imitate original Wolfenstein)

{
	events = ["PlayerShotEvent"]
}

Enemy = new GameObject([new Position(x,y), new Health(100), ...]);

https://github.com/open-source-parsers/jsoncpp/wiki
https://eliasdaler.wordpress.com/2015/08/10/using-lua-and-cpp-in-practice/
http://gamedev.stackexchange.com/questions/72878/how-can-i-implement-a-main-menu
http://www.danielsoltyka.com/programming/2011/04/15/simple-class-serialization-with-jsoncpp/
http://stackoverflow.com/questions/7254009/how-to-convert-a-string-to-a-templated-type-in-c
http://www.hyperrealm.com/libconfig/libconfig_manual.html
