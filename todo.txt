;; Public -> private
;; Immutability
;; Enemy rendering fix
;;AI
;;Transform class -> Position, Rotation
;;Render Class
;;Levels (consists of map, enemies and items)
;; World Class
;; Camera Class -- Done
;; Make Camera a component
;; Cutscenes = Move Camera Independently
;;  scripted events files
;;Data Driven Design
;; Make Map and Enemies loaded from lua file
;; https://github.com/open-source-parsers/jsoncpp/wiki
;;Components
;; Add Event System -> more immutability
;;  RegisterCallback
;; Add Graphics Class and Draw() function instead of manual buffer mutation
;;Weapon
;;Enemy types
;;Door + Secret Area (gst)
;;Animation
;;Debug Console
;;Entity ID's
https://eliasdaler.wordpress.com/2015/08/10/using-lua-and-cpp-in-practice/

Event Handling:

class Object
      handleevent() = {
      		      switch(event.type):
			case: 
      		      };
end

EventManager.subscribe(Object, eventype);
EventQueue = [Event1,Event2,...]
EventManager.handle(event) = {
				listeners = findGameObjectsByEventType(event.type);
				for listener in listeners:
				    listener.handleevent(event)
			     }


{
	events = ["PlayerShotEvent"]
}
